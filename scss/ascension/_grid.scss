/**
 * Grid System
 */


//==========
// Create the grid system row.
//==========

/* The row, which will contain all columns and only columns. */
.row {
	@include create-row;
}


//==========
// Generate the column groups using the global variables.
//==========

/* Column groups */
@include generate-small-columns();
@include generate-medium-columns();
@include generate-large-columns();
@include generate-full-columns();


//==========
/* Custom row classes for easy pre-built columns and breakpoints. */
//==========

.row.full {

	& > * {
		float: left;
		min-height: 1px;
		padding-left: $gutter-width / 2;
		padding-right: $gutter-width / 2;
		position: relative;
		width: 100%;
	}
}

.row.halfs {

	& > * {
		float: left;
		min-height: 1px;
		padding-left: $gutter-width / 2;
		padding-right: $gutter-width / 2;
		position: relative;
		width: 50%;
	}
	// Makes the columns 100% width until the medium media query.
	&.at-medium {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $medium-starts-at) {
			& > * {
				width: 50% !important;
			}
		}
	}
	// Makes the columns 100% width until the large media query.
	&.at-large {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $large-starts-at) {
			& > * {
				width: 50% !important;
			}
		}
	}
	// Makes the columns 100% width until the full media query.
	&.at-full {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $full-starts-at) {
			& > * {
				width: 50% !important;
			}
		}
	}
}

.row.thirds {

	& > * {
		float: left;
		min-height: 1px;
		padding-left: $gutter-width / 2;
		padding-right: $gutter-width / 2;
		position: relative;
		width: 33.333333%;
	}
	// Makes the columns 100% width until the medium media query.
	&.at-medium {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $medium-starts-at) {
			& > * {
				width: 33.333333% !important;
			}
		}
	}
	// Makes the columns 100% width until the large media query.
	&.at-large {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $large-starts-at) {
			& > * {
				width: 33.333333% !important;
			}
		}
	}
	// Makes the columns 100% width until the full media query.
	&.at-full {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $full-starts-at) {
			& > * {
				width: 33.333333% !important;
			}
		}
	}
}
.row.col-2-1,
.row.thirds-2-1 {

	& > * {
		float: left;
		min-height: 1px;
		padding-left: $gutter-width / 2;
		padding-right: $gutter-width / 2;
		position: relative;
		width: 33.333333%;
	}
	& > *:first-child {
		width: 66.666666%;
	}
	// Makes the columns 100% width until the medium media query.
	&.at-medium {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $medium-starts-at) {
			& > * {
				width: 33.333333% !important;
			}
			& > *:first-child {
				width: 66.666666% !important;
			}
		}
	}
	// Makes the columns 100% width until the large media query.
	&.at-large {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $large-starts-at) {
			& > * {
				width: 33.333333% !important;
			}
			& > *:first-child {
				width: 66.666666% !important;
			}
		}
	}
	// Makes the columns 100% width until the full media query.
	&.at-full {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $full-starts-at) {
			& > * {
				width: 33.333333% !important;
			}
			& > *:first-child {
				width: 66.666666% !important;
			}
		}
	}
}
.row.col-1-2,
.row.thirds-1-2 {

	& > * {
		float: left;
		min-height: 1px;
		padding-left: $gutter-width / 2;
		padding-right: $gutter-width / 2;
		position: relative;
		width: 33.333333%;
	}
	& > *:last-child {
		width: 66.666666%;
	}
	// Makes the columns 100% width until the medium media query.
	&.at-medium {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $medium-starts-at) {
			& > * {
				width: 33.333333% !important;
			}
			& > *:last-child {
				width: 66.666666% !important;
			}
		}
	}
	// Makes the columns 100% width until the large media query.
	&.at-large {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $large-starts-at) {
			& > * {
				width: 33.333333% !important;
			}
			& > *:last-child {
				width: 66.666666% !important;
			}
		}
	}
	// Makes the columns 100% width until the full media query.
	&.at-full {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $full-starts-at) {
			& > * {
				width: 33.333333% !important;
			}
			& > *:last-child {
				width: 66.666666% !important;
			}
		}
	}
}

.row.quarters {

	& > * {
		float: left;
		min-height: 1px;
		padding-left: $gutter-width / 2;
		padding-right: $gutter-width / 2;
		position: relative;
		width: 25%;
	}
	// Makes the columns 100% width until the medium media query.
	&.at-medium {

		& > * {
			width: 50% !important;
		}
		@media (min-width: $medium-starts-at) {
			& > * {
				width: 25% !important;
			}
		}
	}
	// Makes the columns 100% width until the large media query.
	&.at-large {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $medium-starts-at) {
			& > * {
				width: 50% !important;
			}
		}
		@media (min-width: $large-starts-at) {
			& > * {
				width: 25% !important;
			}
		}
	}
	// Makes the columns 100% width until the full media query.
	&.at-full {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $medium-starts-at) {
			& > * {
				width: 50% !important;
			}
		}
		@media (min-width: $full-starts-at) {
			& > * {
				width: 25% !important;
			}
		}
	}
}
.row.col-3-1,
.row.quarters-3-1 {

	& > * {
		float: left;
		min-height: 1px;
		padding-left: $gutter-width / 2;
		padding-right: $gutter-width / 2;
		position: relative;
		width: 25%;
	}
	& > *:first-child {
		width: 75%;
	}
	// Makes the columns 100% width until the medium media query.
	&.at-medium {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $medium-starts-at) {
			& > * {
				width: 25% !important;
			}
			& > *:first-child {
				width: 75% !important;
			}
		}
	}
	// Makes the columns 100% width until the large media query.
	&.at-large {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $large-starts-at) {
			& > * {
				width: 25% !important;
			}
			& > *:first-child {
				width: 75% !important;
			}
		}
	}
	// Makes the columns 100% width until the full media query.
	&.at-full {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $full-starts-at) {
			& > * {
				width: 25% !important;
			}
			& > *:first-child {
				width: 75% !important;
			}
		}
	}
}
.row.col-1-3,
.row.quarters-1-3 {

	& > * {
		float: left;
		min-height: 1px;
		padding-left: $gutter-width / 2;
		padding-right: $gutter-width / 2;
		position: relative;
		width: 25%;
	}
	& > *:last-child {
		width: 75%;
	}
	// Makes the columns 100% width until the medium media query.
	&.at-medium {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $medium-starts-at) {
			& > * {
				width: 25% !important;
			}
			& > *:last-child {
				width: 75% !important;
			}
		}
	}
	// Makes the columns 100% width until the large media query.
	&.at-large {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $large-starts-at) {
			& > * {
				width: 25% !important;
			}
			& > *:last-child {
				width: 75% !important;
			}
		}
	}
	// Makes the columns 100% width until the full media query.
	&.at-full {

		& > * {
			width: 100% !important;
		}
		@media (min-width: $full-starts-at) {
			& > * {
				width: 25% !important;
			}
			& > *:last-child {
				width: 75% !important;
			}
		}
	}
}